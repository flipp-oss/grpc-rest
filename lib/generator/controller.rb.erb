####### THIS FILE IS AUTOMATICALLY GENERATED BY protoc-gen-rails. DO NOT MODIFY. #######

require 'grpc_rest'
class <%= service.name.demodulize %>Controller < ActionController::Base
  protect_from_forgery with: :null_session

	rescue_from StandardError do |e|
		render json: GrpcRest.error_msg(e), status: :internal_server_error
	end
  rescue_from GRPC::BadStatus do |e|
		render json: GrpcRest.error_msg(e), status: GrpcRest.grpc_http_status(e.code)
  end
  rescue_from ActionDispatch::Http::Parameters::ParseError, Google::Protobuf::TypeError do |e|
    render json: GrpcRest.error_msg(e), status: :bad_request
  end
  METHOD_PARAM_MAP = <%= service.methods.to_h { |m| [m.name.underscore, m.path_info.map(&:to_h)]}.pretty_inspect %>.freeze

<% service.methods.each do |method| %>
	def <%= method.name %>
    parameters = request.parameters.to_h.deep_transform_keys(&:underscore).
      except(*%w(controller action <%= service.name.underscore %>))
    grpc_request = GrpcRest.init_request(<%= method.request_type %>, parameters)
    GrpcRest.assign_params(grpc_request, METHOD_PARAM_MAP["<%= method.name.underscore %>"], "<%= method.option_body %>", request.parameters)
    render json: GrpcRest.send_request("<%= service.namespace %>::<%= service.name.classify %>", "<%= method.name.underscore %>", grpc_request, <%= method.rest_options.inspect %>)
  end
<% end %>
end
