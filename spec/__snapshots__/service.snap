spec/app/app/controllers/my_service_controller.rb:
####### THIS FILE IS AUTOMATICALLY GENERATED BY protoc-gen-rails. DO NOT MODIFY. #######

require 'grpc_rest'
class MyServiceController < ActionController::Base
  protect_from_forgery with: :null_session

	rescue_from StandardError do |e|
		render json: GrpcRest.error_msg(e), status: :internal_server_error
	end
  rescue_from GRPC::BadStatus do |e|
		render json: GrpcRest.error_msg(e), status: GrpcRest.grpc_http_status(e.code)
  end
  rescue_from ActionDispatch::Http::Parameters::ParseError, Google::Protobuf::TypeError do |e|
    render json: GrpcRest.error_msg(e), status: :bad_request
  end
  METHOD_PARAM_MAP = {"test"=>[{:name=>"foobar", :val=>"blah/*", :split_name=>["foobar"]}],
 "test2"=>[],
 "test3"=>
  [{:name=>"sub_record.sub_id",
    :val=>"",
    :split_name=>["sub_record", "sub_id"]}],
 "test4"=>[]}
.freeze


	def test
    parameters = request.parameters.to_h.deep_transform_keys(&:underscore).
      except(*%w(controller action my_service))
    grpc_request = GrpcRest.init_request(Testdata::TestRequest, parameters)
    GrpcRest.assign_params(grpc_request, METHOD_PARAM_MAP["test"], "", request.parameters)
    render json: GrpcRest.send_request("Testdata::MyService", "test", grpc_request, {:emit_defaults=>true})
  end

	def test2
    parameters = request.parameters.to_h.deep_transform_keys(&:underscore).
      except(*%w(controller action my_service))
    grpc_request = GrpcRest.init_request(Testdata::TestRequest, parameters)
    GrpcRest.assign_params(grpc_request, METHOD_PARAM_MAP["test2"], "second_record", request.parameters)
    render json: GrpcRest.send_request("Testdata::MyService", "test2", grpc_request, {})
  end

	def test3
    parameters = request.parameters.to_h.deep_transform_keys(&:underscore).
      except(*%w(controller action my_service))
    grpc_request = GrpcRest.init_request(Testdata::TestRequest, parameters)
    GrpcRest.assign_params(grpc_request, METHOD_PARAM_MAP["test3"], "", request.parameters)
    render json: GrpcRest.send_request("Testdata::MyService", "test3", grpc_request, {})
  end

	def test4
    parameters = request.parameters.to_h.deep_transform_keys(&:underscore).
      except(*%w(controller action my_service))
    grpc_request = GrpcRest.init_request(Testdata::TestRequest, parameters)
    GrpcRest.assign_params(grpc_request, METHOD_PARAM_MAP["test4"], "*", request.parameters)
    render json: GrpcRest.send_request("Testdata::MyService", "test4", grpc_request, {})
  end

end


spec/app/config/routes/grpc.rb:
# frozen_string_literal: true

####### THIS FILE IS AUTOMATICALLY GENERATED BY protoc-gen-rails. DO NOT MODIFY. #######


get '/test/*foobar' => 'my_service#test' 
post '/test2' => 'my_service#test2' 
post '/test3/*sub_id' => 'my_service#test3' 
post '/test4' => 'my_service#test4' 


